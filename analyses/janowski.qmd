---
title: "Janowski Formulars"
author: "Lasse Hjorth Madsen"
date: today 
format: html
toc: true
toc-expand: true
editor: source
execute:
  echo: false
  warning: false
---

```{r setup}
library(tidyverse)
library(knitr)
devtools::load_all(path = "../../backgammon")
```

## Why this?
This note is for better understanding exactly what eXtreme Gammon does to estimate cubeless and cubeful equities at money and match play. In particular, we apply the Janowski Formular(s) and try to figure out what it means when the eXtreme Gammon Documentation says that "In eXtreme Gammon the Janowski formula has been extended to apply also in match play".

## How XG works
They basic mechanism is this:

-   A neural net evaluates a position and come up with six probabilities for either winning or losing a regular game, a gammon and a backgammon. (Strictly speaking only five probabilities are estimated; the last outcome is redundant since the probabilities must sum to 1). The estimated probabilities  are for cubeless money game: What will happen if the game is played to conclusion with no doubling cube at money game conditions.

- To improve the quality of this estimate, a weighted average of all possible positions after one and after two rolls is calculated; what we call 2- and 3-ply evaluations. The initial neural net evaluation, 1-ply, is not available in XG.

- From the estimated probability distribtion, it is easy to calculate an expected, or average outcome, the *equity* of the position. This is still assuming money game with no doubling cube. Since that situation *never* happens, the number is not terribly relevant. Therefore, XG tries to estimate what the *cubeful* equity is, using [formulars](https://bkgm.com/articles/Janowski/cubeformulae.pdf) develped by Rick Janowski.

## An example
Let's look at a position after White opens with 21, slotting:

```{r}
#| fig.width = 4, fig.height = 4
ggboard("XGID=-b---AD-C--AeD---c-e----B-:0:0:-1:00:0:0:0:0:10")
```

According to XG 2-ply (an average of the value of the position after Black's 21 possible replies), the propabilites of the six possible outcomes of the game, if played to conclusion, are as follows:

```{r}
tab <- tibble(" " = c("White wins", "Black wins"), 
              "Regular" = c(.3656, .3574),
              "Gammon" = c(.1300, .1319),
              "Backgammon" = c(0.0060, 0.0091)) %>%
  rowwise() %>% 
  mutate("Total" = Regular + Gammon + Backgammon) %>% 
  ungroup()

knitr::kable(tab, format = "html", table.attr = "style='width:60%;'")
```

This comes to a cubeless equity of: $E = `r sum(as.matrix(tab[, 2:4]) * c(1, -1, 2, -2, 3, -3))`$; White is a slight favorite to win, but a small money underdog because of the extra gammons and backgammons. The cubeless equity after a double that XG report, is just the double of this value, so assuming double/take, then a dead cube forever.

Note that the numbers that XG reports are probabilities for winning (*including* gammons and backgammons), gammon (*including* backgammon), and backgammon. So they have to be converted to get probabilities that sum to 1.

Also: It is a mystery to me that the cubeless distribution changes slightly when Jacoby is enabled. It is *not* that gammons or gammons are set to zero; the raw winning chances change. It can't be because future cube actions are taken into account; these are cubeless numbers and they don't change depending on the cube position, unless Jacoby is set.






